{"ast":null,"code":"import { UserLogin } from './userlogin';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../search.service\";\nimport * as i3 from \"@angular/common\";\nfunction UserLoginComponent_span_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \" Email-id required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UserLoginComponent_span_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \" Enter a valid email. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UserLoginComponent_span_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \" Password required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\nexport class UserLoginComponent {\n  constructor(router, proservice) {\n    this.router = router;\n    this.proservice = proservice;\n    this.userlog = new UserLogin();\n  }\n  Gotopage(userForm) {\n    if (this.userlog.emailId == this.proservice.mail && this.userlog.password == this.proservice.getpwd()) {\n      if (window.confirm(\"Let's start Shopping..\")) {\n        this.router.navigate(['/product']);\n      } else {\n        userForm.reset();\n        console.log(this.proservice.mail);\n        console.log(this.proservice.getpwd());\n      }\n    } else {\n      userForm.reset();\n      alert(\"Invalid EmailId or Password\");\n    }\n  }\n  save(userForm) {}\n}\nUserLoginComponent.ɵfac = function UserLoginComponent_Factory(t) {\n  return new (t || UserLoginComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.SearchService));\n};\nUserLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UserLoginComponent,\n  selectors: [[\"app-user-login\"]],\n  decls: 29,\n  vars: 12,\n  consts: [[\"id\", \"page\"], [\"novalidate\", \"\", 1, \"container\", \"col-md-6\", \"mt-5\", 3, \"ngSubmit\"], [\"regForm\", \"ngForm\"], [1, \"display-4\", \"lead\", 2, \"font-family\", \"Hey October\"], [1, \"form-group\"], [\"for\", \"emailId\", 1, \"lead\", 2, \"font-family\", \"Hey October\"], [\"name\", \"emailId\", \"id\", \"emailId\", \"type\", \"text\", \"required\", \"\", \"pattern\", \"^[a-z0-9._%+-]+@[a-z0-9.-]+.[a-z]{2,4}$\", 1, \"form-control\", 3, \"ngModel\", \"ngClass\", \"ngModelChange\"], [\"EmailIdVar\", \"ngModel\"], [1, \"invalid-feedback\"], [4, \"ngIf\"], [\"for\", \"password\", 1, \"lead\", 2, \"font-family\", \"Hey October\"], [\"name\", \"password\", \"id\", \"password\", \"type\", \"password\", \"minlength\", \"8\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngClass\", \"ngModelChange\"], [\"passwordVar\", \"ngModel\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\", 3, \"disabled\", \"click\"]],\n  template: function UserLoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r6 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelement(1, \"br\")(2, \"br\")(3, \"br\");\n      i0.ɵɵelementStart(4, \"form\", 1, 2);\n      i0.ɵɵlistener(\"ngSubmit\", function UserLoginComponent_Template_form_ngSubmit_4_listener() {\n        i0.ɵɵrestoreView(_r6);\n        const _r0 = i0.ɵɵreference(5);\n        return i0.ɵɵresetView(ctx.save(_r0));\n      });\n      i0.ɵɵelementStart(6, \"p\", 3);\n      i0.ɵɵtext(7, \"User Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\", 4)(9, \"label\", 5);\n      i0.ɵɵtext(10, \"Enter Email-id : \\u00A0\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"input\", 6, 7);\n      i0.ɵɵlistener(\"ngModelChange\", function UserLoginComponent_Template_input_ngModelChange_11_listener($event) {\n        return ctx.userlog.emailId = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"span\", 8);\n      i0.ɵɵtemplate(14, UserLoginComponent_span_14_Template, 2, 0, \"span\", 9);\n      i0.ɵɵelement(15, \"br\")(16, \"br\");\n      i0.ɵɵtemplate(17, UserLoginComponent_span_17_Template, 2, 0, \"span\", 9);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(18, \"div\", 4)(19, \"label\", 10);\n      i0.ɵɵtext(20, \"Enter Password : \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"input\", 11, 12);\n      i0.ɵɵlistener(\"ngModelChange\", function UserLoginComponent_Template_input_ngModelChange_21_listener($event) {\n        return ctx.userlog.password = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"span\", 8);\n      i0.ɵɵtemplate(24, UserLoginComponent_span_24_Template, 2, 0, \"span\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(25, \"br\")(26, \"br\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"button\", 13);\n      i0.ɵɵlistener(\"click\", function UserLoginComponent_Template_button_click_27_listener() {\n        i0.ɵɵrestoreView(_r6);\n        const _r0 = i0.ɵɵreference(5);\n        return i0.ɵɵresetView(ctx.Gotopage(_r0));\n      });\n      i0.ɵɵtext(28, \"Login\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(5);\n      const _r1 = i0.ɵɵreference(12);\n      const _r4 = i0.ɵɵreference(22);\n      i0.ɵɵadvance(11);\n      i0.ɵɵproperty(\"ngModel\", ctx.userlog.emailId)(\"ngClass\", i0.ɵɵpureFunction1(8, _c0, (_r1.touched || _r1.dirty) && !_r1.valid));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", _r1.errors == null ? null : _r1.errors.required);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", _r1.errors == null ? null : _r1.errors.pattern);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.userlog.password)(\"ngClass\", i0.ɵɵpureFunction1(10, _c0, (_r4.touched || _r4.dirty) && !_r4.valid));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", _r4.errors == null ? null : _r4.errors.required);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"disabled\", !_r0.valid);\n    }\n  },\n  dependencies: [i3.NgClass, i3.NgIf],\n  styles: [\"#page[_ngcontent-%COMP%]\\r\\n{\\r\\n    margin-top: 0.5%;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdXNlci1sb2dpbi91c2VyLWxvZ2luLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0lBRUksZ0JBQWdCO0FBQ3BCIiwic291cmNlc0NvbnRlbnQiOlsiI3BhZ2Vcclxue1xyXG4gICAgbWFyZ2luLXRvcDogMC41JTtcclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"AAIA,SAASA,SAAS,QAAQ,aAAa;;;;;;;ICK3BC,4BAA0C;IACtCA,oCACJ;IAAAA,iBAAO;;;;;IAEPA,4BAAyC;IACrCA,sCACJ;IAAAA,iBAAO;;;;;IAQPA,4BAA2C;IACvCA,oCACJ;IAAAA,iBAAO;;;;;;;;ADdnB,OAAM,MAAOC,kBAAkB;EAE7BC,YAAoBC,MAAc,EAASC,UAAwB;IAA/C,WAAM,GAAND,MAAM;IAAiB,eAAU,GAAVC,UAAU;IAGrD,YAAO,GAAG,IAAIL,SAAS,EAAE;EAFzB;EAIAM,QAAQ,CAACC,QAAiB;IAExB,IAAG,IAAI,CAACC,OAAO,CAACC,OAAO,IAAI,IAAI,CAACJ,UAAU,CAACK,IAAI,IAAI,IAAI,CAACF,OAAO,CAACG,QAAQ,IAAI,IAAI,CAACN,UAAU,CAACO,MAAM,EAAE,EAAC;MACnG,IAAGC,MAAM,CAACC,OAAO,CAAC,wBAAwB,CAAC,EAAC;QAC1C,IAAI,CAACV,MAAM,CAACW,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC;OACnC,MACG;QACFR,QAAQ,CAACS,KAAK,EAAE;QAChBC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACb,UAAU,CAACK,IAAI,CAAC;QACjCO,OAAO,CAACC,GAAG,CAAC,IAAI,CAACb,UAAU,CAACO,MAAM,EAAE,CAAC;;KAGxC,MACG;MACFL,QAAQ,CAACS,KAAK,EAAE;MAChBG,KAAK,CAAC,6BAA6B,CAAC;;EAIxC;EACAC,IAAI,CAACb,QAAiB,GAGtB;;AA9BWL,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;QAAlBA,kBAAkB;EAAAmB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;;MCX/BxB,8BAAe;MACXA,qBAAI;MACRA,kCAAkG;MAAjDA;QAAAA;QAAA;QAAA,OAAcA,4BAAa;MAAA,EAAC;MACzEA,4BAA8D;MAAAA,0BAAU;MAAAA,iBAAI;MAC1EA,8BAAwB;MAC8CA,wCAAyB;MAAAA,iBAAQ;MACrGA,oCACgJ;MADzIA;QAAA;MAAA,EAA6B;MAApCA,iBACgJ;MAChJA,gCAA+B;MAC3BA,uEAEO;MACPA,sBAAI;MACJA,uEAEO;MACXA,iBAAO;MAETA,+BAAwB;MAC+CA,kCAAiB;MAAAA,iBAAQ;MAC9FA,sCACkG;MAD3FA;QAAA;MAAA,EAA8B;MAArCA,iBACkG;MAClGA,gCAA+B;MAC3BA,uEAEO;MACXA,iBAAO;MACPA,sBAAI;MACRA,iBAAM;MACJA,mCAA4G;MAA/BA;QAAAA;QAAA;QAAA,OAAWA,gCAAiB;MAAA,EAAC;MAAEA,sBAAK;MAAAA,iBAAS;;;;;;MAvBjHA,gBAA6B;MAA7BA,6CAA6B;MAGzBA,eAAkC;MAAlCA,sEAAkC;MAIlCA,eAAiC;MAAjCA,qEAAiC;MAOrCA,eAA8B;MAA9BA,8CAA8B;MAG1BA,eAAmC;MAAnCA,sEAAmC;MAMDA,eAA6B;MAA7BA,qCAA6B","names":["UserLogin","i0","UserLoginComponent","constructor","router","proservice","Gotopage","userForm","userlog","emailId","mail","password","getpwd","window","confirm","navigate","reset","console","log","alert","save","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\foodbox\\foodbox\\src\\app\\user-login\\user-login.component.ts","C:\\foodbox\\foodbox\\src\\app\\user-login\\user-login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { SearchService } from '../search.service';\r\nimport { UserLogin } from './userlogin';\r\n\r\n@Component({\r\n  selector: 'app-user-login',\r\n  templateUrl: './user-login.component.html',\r\n  styleUrls: ['./user-login.component.css']\r\n})\r\nexport class UserLoginComponent {\r\n\r\n  constructor(private router: Router,private proservice:SearchService){\r\n  }\r\n\r\n  userlog = new UserLogin();\r\n  \r\n  Gotopage(userForm : NgForm)\r\n  {\r\n    if(this.userlog.emailId == this.proservice.mail && this.userlog.password == this.proservice.getpwd()){\r\n      if(window.confirm(\"Let's start Shopping..\")){\r\n        this.router.navigate(['/product']);\r\n      }\r\n      else{\r\n        userForm.reset();\r\n        console.log(this.proservice.mail);\r\n        console.log(this.proservice.getpwd());\r\n      }\r\n      \r\n    }\r\n    else{\r\n      userForm.reset();\r\n      alert(\"Invalid EmailId or Password\");\r\n\r\n\r\n    }\r\n  }\r\n  save(userForm : NgForm){\r\n    \r\n    \r\n  }\r\n\r\n}","<div id=\"page\">\r\n    <br><br><br>\r\n<form class=\"container col-md-6 mt-5\" novalidate (ngSubmit) = \"save(regForm)\" #regForm = \"ngForm\">\r\n    <p class = \"display-4 lead\" style=\"font-family: Hey October;\">User Login</p>            \r\n      <div class=\"form-group\"> \r\n        <label for=\"emailId\" class=\"lead\" style=\"font-family: Hey October;\">Enter Email-id :   &nbsp;</label>\r\n        <input [(ngModel)] = userlog.emailId #EmailIdVar = \"ngModel\" name=\"emailId\"  id = \"emailId\" type=\"text\"  class=\"form-control\" required\r\n        [ngClass] = \"{'is-invalid' : (EmailIdVar.touched || EmailIdVar.dirty) && !EmailIdVar.valid}\" pattern=\"^[a-z0-9._%+-]+@[a-z0-9.-]+.[a-z]{2,4}$\"/>\r\n        <span class=\"invalid-feedback\">\r\n            <span *ngIf = EmailIdVar.errors?.required>\r\n                Email-id required. \r\n            </span>\r\n            <br><br>\r\n            <span *ngIf = EmailIdVar.errors?.pattern>\r\n                Enter a valid email.\r\n            </span>\r\n        </span>\r\n    </div>    \r\n      <div class=\"form-group\"> \r\n        <label for=\"password\" class=\"lead\" style=\"font-family: Hey October;\">Enter Password : </label>\r\n        <input [(ngModel)] = userlog.password #passwordVar = \"ngModel\" name=\"password\"  id = \"password\" type=\"password\" minlength=\"8\" class=\"form-control\" required\r\n        [ngClass] = \"{'is-invalid' : (passwordVar.touched || passwordVar.dirty) && !passwordVar.valid}\" />\r\n        <span class=\"invalid-feedback\">\r\n            <span *ngIf = passwordVar.errors?.required>\r\n                Password required. \r\n            </span>                \r\n        </span>\r\n        <br><br>\r\n    </div>\r\n      <button type=\"submit\" class=\"btn btn-success\"  [disabled] = '!regForm.valid' (click) = \"Gotopage(regForm)\" >Login</button>            \r\n  </form>\r\n\r\n</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}