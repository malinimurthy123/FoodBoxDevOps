{"ast":null,"code":"import { adminLogin } from './adminlogin';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nfunction AdminLoginComponent_span_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \" Email-id required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AdminLoginComponent_span_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \" Enter a valid email \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AdminLoginComponent_span_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \" Password required \");\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\nexport class AdminLoginComponent {\n  constructor(router) {\n    this.router = router;\n    this.adlogin = new adminLogin();\n  }\n  ngOnInit() {}\n  Gotopage(userForm) {\n    if (this.adlogin.emailId == \"admin@gmail.com\" && this.adlogin.password == \"kitchenadmin\") {\n      if (window.confirm(\"Do you want to visit Admin Page?\")) {\n        this.router.navigate(['/admin-page']);\n      } else {\n        userForm.reset();\n        console.log(this.adlogin.password);\n      }\n    } else {\n      userForm.reset();\n      alert(\"Invalid EmailId or Password\");\n    }\n  }\n  save(userForm) {}\n}\nAdminLoginComponent.ɵfac = function AdminLoginComponent_Factory(t) {\n  return new (t || AdminLoginComponent)(i0.ɵɵdirectiveInject(i1.Router));\n};\nAdminLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AdminLoginComponent,\n  selectors: [[\"app-admin-login\"]],\n  decls: 24,\n  vars: 12,\n  consts: [[\"novalidate\", \"\", 1, \"container\", \"col-md-6\", \"mt-5\", 3, \"ngSubmit\"], [\"regForm\", \"ngForm\"], [1, \"display-4\", \"lead\", 2, \"font-family\", \"Hey October\"], [1, \"form-group\"], [\"for\", \"emailId\", 1, \"lead\", 2, \"font-family\", \"Hey October\"], [\"name\", \"emailId\", \"id\", \"emailId\", \"type\", \"text\", \"minlength\", \"4\", \"required\", \"\", \"pattern\", \"^[a-z0-9._%+-]+@[a-z0-9.-]+.[a-z]{2,4}$\", 1, \"form-control\", 3, \"ngModel\", \"ngClass\", \"ngModelChange\"], [\"EmailIdVar\", \"ngModel\"], [1, \"invalid-feedback\"], [4, \"ngIf\"], [\"for\", \"password\", 1, \"lead\", 2, \"font-family\", \"Hey October\"], [\"name\", \"password\", \"id\", \"password\", \"type\", \"password\", \"required\", \"\", \"minlength\", \"5\", 1, \"form-control\", 3, \"ngModel\", \"ngClass\", \"ngModelChange\"], [\"passwordVar\", \"ngModel\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\", 3, \"disabled\", \"click\"]],\n  template: function AdminLoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r6 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelement(0, \"br\");\n      i0.ɵɵelementStart(1, \"form\", 0, 1);\n      i0.ɵɵlistener(\"ngSubmit\", function AdminLoginComponent_Template_form_ngSubmit_1_listener() {\n        i0.ɵɵrestoreView(_r6);\n        const _r0 = i0.ɵɵreference(2);\n        return i0.ɵɵresetView(ctx.save(_r0));\n      });\n      i0.ɵɵelementStart(3, \"p\", 2);\n      i0.ɵɵtext(4, \"Admin Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"div\", 3)(6, \"label\", 4);\n      i0.ɵɵtext(7, \"Enter Email-id: \\u00A0\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"input\", 5, 6);\n      i0.ɵɵlistener(\"ngModelChange\", function AdminLoginComponent_Template_input_ngModelChange_8_listener($event) {\n        return ctx.adlogin.emailId = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"span\", 7);\n      i0.ɵɵtemplate(11, AdminLoginComponent_span_11_Template, 2, 0, \"span\", 8);\n      i0.ɵɵtemplate(12, AdminLoginComponent_span_12_Template, 2, 0, \"span\", 8);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(13, \"div\", 3);\n      i0.ɵɵelement(14, \"Br\");\n      i0.ɵɵelementStart(15, \"label\", 9);\n      i0.ɵɵtext(16, \"Enter Password: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"input\", 10, 11);\n      i0.ɵɵlistener(\"ngModelChange\", function AdminLoginComponent_Template_input_ngModelChange_17_listener($event) {\n        return ctx.adlogin.password = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"span\", 7);\n      i0.ɵɵtemplate(20, AdminLoginComponent_span_20_Template, 2, 0, \"span\", 8);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(21, \"Br\");\n      i0.ɵɵelementStart(22, \"button\", 12);\n      i0.ɵɵlistener(\"click\", function AdminLoginComponent_Template_button_click_22_listener() {\n        i0.ɵɵrestoreView(_r6);\n        const _r0 = i0.ɵɵreference(2);\n        return i0.ɵɵresetView(ctx.Gotopage(_r0));\n      });\n      i0.ɵɵtext(23, \"Login\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(2);\n      const _r1 = i0.ɵɵreference(9);\n      const _r4 = i0.ɵɵreference(18);\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngModel\", ctx.adlogin.emailId)(\"ngClass\", i0.ɵɵpureFunction1(8, _c0, (_r1.touched || _r1.dirty) && !_r1.valid));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", _r1.errors == null ? null : _r1.errors.required);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", _r1.errors == null ? null : _r1.errors.pattern);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.adlogin.password)(\"ngClass\", i0.ɵɵpureFunction1(10, _c0, (_r4.touched || _r4.dirty) && !_r4.valid));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", _r4.errors == null ? null : _r4.errors.required);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"disabled\", !_r0.valid);\n    }\n  },\n  styles: [\"p[_ngcontent-%COMP%]\\r\\n{\\r\\n    margin-top: 0.2%;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYWRtaW4vYWRtaW4tbG9naW4vYWRtaW4tbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7SUFFSSxnQkFBZ0I7QUFDcEIiLCJzb3VyY2VzQ29udGVudCI6WyJwXHJcbntcclxuICAgIG1hcmdpbi10b3A6IDAuMiU7XHJcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"AAGA,SAASA,UAAU,QAAQ,cAAc;;;;;ICK7BC,4BAA0C;IACtCA,mCACJ;IAAAA,iBAAO;;;;;IAEPA,4BAAyC;IACrCA,qCACJ;IAAAA,iBAAO;;;;;IASPA,4BAA2C;IACvCA,mCACJ;IAAAA,iBAAO;;;;;;;;ADdnB,OAAM,MAAOC,mBAAmB;EAK9BC,YAAoBC,MAAc;IAAd,WAAM,GAANA,MAAM;IAF1B,YAAO,GAAG,IAAIJ,UAAU,EAAE;EAG1B;EAEAK,QAAQ,IACR;EACAC,QAAQ,CAACC,QAAiB;IAExB,IAAG,IAAI,CAACC,OAAO,CAACC,OAAO,IAAI,iBAAiB,IAAI,IAAI,CAACD,OAAO,CAACE,QAAQ,IAAI,cAAc,EAAC;MACtF,IAAGC,MAAM,CAACC,OAAO,CAAC,kCAAkC,CAAC,EAAC;QACpD,IAAI,CAACR,MAAM,CAACS,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC;OACtC,MACG;QACFN,QAAQ,CAACO,KAAK,EAAE;QAChBC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACR,OAAO,CAACE,QAAQ,CAAC;;KAGrC,MACG;MACFH,QAAQ,CAACO,KAAK,EAAE;MAChBG,KAAK,CAAC,6BAA6B,CAAC;;EAIxC;EACAC,IAAI,CAACX,QAAiB,GAGtB;;AAhCWL,mBAAmB;mBAAnBA,mBAAmB;AAAA;AAAnBA,mBAAmB;QAAnBA,mBAAmB;EAAAiB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;;MCXhCtB,qBAAI;MACJA,kCAAkG;MAAjDA;QAAAA;QAAA;QAAA,OAAcA,4BAAa;MAAA,EAAC;MACzEA,4BAA8D;MAAAA,2BAAW;MAAAA,iBAAI;MAC3EA,8BAAwB;MAC8CA,sCAAsB;MAAAA,iBAAQ;MAClGA,mCACgJ;MADzIA;QAAA;MAAA,EAA6B;MAApCA,iBACgJ;MAChJA,gCAA+B;MAC3BA,wEAEO;MAEPA,wEAEO;MACXA,iBAAO;MAETA,+BAAwB;MACtBA,sBAAI;MACJA,iCAAqE;MAAAA,iCAAgB;MAAAA,iBAAQ;MAC7FA,sCACiG;MAD1FA;QAAA;MAAA,EAA8B;MAArCA,iBACiG;MACjGA,gCAA+B;MAC3BA,wEAEO;MAEXA,iBAAO;MAEXA,sBAAI;MACFA,mCAA4G;MAA/BA;QAAAA;QAAA;QAAA,OAAWA,gCAAiB;MAAA,EAAC;MAAEA,sBAAK;MAAAA,iBAAS;;;;;;MAzBjHA,eAA6B;MAA7BA,6CAA6B;MAGzBA,eAAkC;MAAlCA,sEAAkC;MAIlCA,eAAiC;MAAjCA,qEAAiC;MAQrCA,eAA8B;MAA9BA,8CAA8B;MAG1BA,eAAmC;MAAnCA,sEAAmC;MAODA,eAA6B;MAA7BA,qCAA6B","names":["adminLogin","i0","AdminLoginComponent","constructor","router","ngOnInit","Gotopage","userForm","adlogin","emailId","password","window","confirm","navigate","reset","console","log","alert","save","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\foodbox\\foodbox\\src\\app\\admin\\admin-login\\admin-login.component.ts","C:\\foodbox\\foodbox\\src\\app\\admin\\admin-login\\admin-login.component.html"],"sourcesContent":["import { Component, getModuleFactory, OnInit, ResolvedReflectiveFactory } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { SearchService } from 'src/app/search.service';\r\nimport { adminLogin } from './adminlogin';\r\nimport { RouterModule, Route, Router} from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-admin-login',\r\n  templateUrl: './admin-login.component.html',\r\n  styleUrls: ['./admin-login.component.css']\r\n})\r\nexport class AdminLoginComponent implements OnInit {\r\n  \r\n  \r\n  adlogin = new adminLogin();\r\n\r\n  constructor(private router: Router){\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  Gotopage(userForm : NgForm)\r\n  {\r\n    if(this.adlogin.emailId == \"admin@gmail.com\" && this.adlogin.password == \"kitchenadmin\"){\r\n      if(window.confirm(\"Do you want to visit Admin Page?\")){\r\n        this.router.navigate(['/admin-page']);\r\n      }\r\n      else{\r\n        userForm.reset();\r\n        console.log(this.adlogin.password);\r\n      }\r\n      \r\n    }\r\n    else{\r\n      userForm.reset();\r\n      alert(\"Invalid EmailId or Password\");\r\n\r\n\r\n    }\r\n  }\r\n  save(userForm : NgForm){\r\n    \r\n    \r\n  }\r\n\r\n}","<br>\r\n<form class=\"container col-md-6 mt-5\" novalidate (ngSubmit) = \"save(regForm)\" #regForm = \"ngForm\">\r\n    <p class = \"display-4 lead\" style=\"font-family: Hey October;\">Admin Login</p>            \r\n      <div class=\"form-group\"> \r\n        <label for=\"emailId\" class=\"lead\" style=\"font-family: Hey October;\">Enter Email-id: &nbsp;</label> \r\n        <input [(ngModel)] = adlogin.emailId #EmailIdVar = \"ngModel\" name=\"emailId\"  id = \"emailId\" type=\"text\" minlength=\"4\" class=\"form-control\" required\r\n        [ngClass] = \"{'is-invalid' : (EmailIdVar.touched || EmailIdVar.dirty) && !EmailIdVar.valid}\" pattern=\"^[a-z0-9._%+-]+@[a-z0-9.-]+.[a-z]{2,4}$\"/>\r\n        <span class=\"invalid-feedback\">\r\n            <span *ngIf = EmailIdVar.errors?.required>\r\n                Email-id required\r\n            </span> \r\n            \r\n            <span *ngIf = EmailIdVar.errors?.pattern>\r\n                Enter a valid email\r\n            </span>\r\n        </span>\r\n    </div>    \r\n      <div class=\"form-group\"> \r\n        <Br>\r\n        <label for=\"password\" class=\"lead\" style=\"font-family: Hey October;\">Enter Password: </label>\r\n        <input [(ngModel)] = adlogin.password #passwordVar = \"ngModel\" name=\"password\"  id = \"password\" type=\"password\"  class=\"form-control\" required minlength=\"5\" \r\n        [ngClass] = \"{'is-invalid' : (passwordVar.touched || passwordVar.dirty) && !passwordVar.valid}\"/>\r\n        <span class=\"invalid-feedback\">\r\n            <span *ngIf = passwordVar.errors?.required>\r\n                Password required\r\n            </span>\r\n            \r\n        </span>\r\n    </div>\r\n    <Br>\r\n      <button type=\"submit\" class=\"btn btn-success\"  [disabled] = '!regForm.valid' (click) = \"Gotopage(regForm)\" >Login</button>            \r\n  </form>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}